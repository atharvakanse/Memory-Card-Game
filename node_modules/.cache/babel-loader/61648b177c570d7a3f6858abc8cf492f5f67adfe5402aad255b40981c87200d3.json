{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sohan\\\\memory-card-game\\\\Memory-Card-Game\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport SingleCard from './components/SingleCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [{\n  \"src\": \"/images/astronaut.png\",\n  matched: false\n}, {\n  \"src\": \"/images/moon.png\",\n  matched: false\n}, {\n  \"src\": \"/images/rocket.png\",\n  matched: false\n}, {\n  \"src\": \"/images/saturn.png\",\n  matched: false\n}, {\n  \"src\": \"/images/star.png\",\n  matched: false\n}, {\n  \"src\": \"/images/sun.png\",\n  matched: false\n}];\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n  useEffect(() => {\n    shuffleCards();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Magic Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(SingleCard, {\n        card: card,\n        handleChoice: handleChoice,\n        flipped: card === choiceOne || card === choiceTwo || card.matched,\n        disabled: disabled\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Turns: \", turns, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages].sort(() => Math.random() - 0.5).map(card => ({\n      ...card,\n      id: Math.random()\n    }));\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setCards(shuffledCards);\n    setTurns(0);\n  };\n  const handleChoice = card => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurns => prevTurns + 1);\n    setDisabled(false);\n  };\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true);\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return {\n                ...card,\n                matched: true\n              };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetTurn();\n      } else {\n        setTimeout(() => resetTurn(), 1000);\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n  console.log(cards);\n}\n_s(App, \"sOK1JNu0C1OcVjqy57g7H+5ZZZ4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","SingleCard","cardImages","matched","App","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","disabled","setDisabled","shuffleCards","map","card","handleChoice","id","shuffledCards","sort","Math","random","resetTurn","prevTurns","src","prevCards","setTimeout","console","log"],"sources":["C:/Users/sohan/memory-card-game/Memory-Card-Game/src/App.js"],"sourcesContent":["import './App.css';\r\nimport React, {useEffect, useState } from \"react\";\r\nimport SingleCard from './components/SingleCard';\r\n\r\nconst cardImages=[\r\n  {\"src\":\"/images/astronaut.png\", matched: false},\r\n  {\"src\":\"/images/moon.png\", matched: false},\r\n  {\"src\":\"/images/rocket.png\", matched: false},\r\n  {\"src\":\"/images/saturn.png\", matched: false},\r\n  {\"src\":\"/images/star.png\", matched: false},\r\n  {\"src\":\"/images/sun.png\", matched: false}\r\n]\r\n\r\nfunction App() {\r\n  const[cards,setCards] = useState([])\r\n  const[turns,setTurns] = useState(0)\r\n  const[choiceOne, setChoiceOne] = useState(null)\r\n  const[choiceTwo, setChoiceTwo] = useState(null)\r\n  const[disabled, setDisabled] = useState(false)\r\n\r\n  useEffect(() => {\r\n    shuffleCards()\r\n  }, [])\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Magic Match</h1>\r\n      <button onClick={shuffleCards}>New Game</button>\r\n  \r\n      <div className=\"card-grid\">\r\n        {cards.map(card =>(\r\n          <SingleCard \r\n          key={card.id} \r\n          card={card} \r\n          handleChoice={handleChoice} \r\n          flipped={card === choiceOne || card === choiceTwo || card.matched} \r\n          disabled={disabled}\r\n          />\r\n         ))}\r\n      </div>\r\n      <p>Turns: {turns} </p>\r\n    </div>\r\n  );\r\n    const shuffleCards = () => {\r\n    const shuffledCards = [...cardImages, ...cardImages]\r\n      .sort(() => Math.random() - 0.5)  \r\n      .map((card) => ({ ...card, id: Math.random()}))\r\n      \r\n      setChoiceOne(null)\r\n      setChoiceTwo(null)\r\n      setCards(shuffledCards)\r\n      setTurns(0)\r\n  }\r\n  \r\n  const handleChoice = (card) => {\r\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\r\n  }\r\n\r\n  const resetTurn = () => {\r\n    setChoiceOne(null)\r\n    setChoiceTwo(null)\r\n    setTurns(prevTurns => prevTurns + 1)\r\n    setDisabled(false)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if(choiceOne && choiceTwo) {\r\n      setDisabled(true)\r\n\r\n      if(choiceOne.src === choiceTwo.src) {\r\n        setCards(prevCards => {\r\n          return prevCards.map(card => {\r\n            if(card.src === choiceOne.src) {\r\n              return {...card, matched: true}\r\n            } else{\r\n              return card\r\n            }\r\n          })\r\n        })\r\n        resetTurn()\r\n      } else {\r\n        setTimeout(() => resetTurn(), 1000)\r\n      } \r\n    }\r\n  },[choiceOne, choiceTwo])\r\n\r\n  console.log(cards)\r\n}\r\n\r\nexport default App\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}